{"is_source_file": true, "format": "Python", "description": "This file defines dependencies and helper functions for authentication, database session management, and password hashing within a FastAPI application. It includes functions for creating and verifying tokens, managing database sessions, and user authentication interfacing.", "external_files": ["fastapi", "fastapi.security", "jose", "sqlalchemy.orm", ".", "os", "typing"], "external_methods": ["Depends", "HTTPException", "jwt.encode", "jwt.decode", "database.SessionLocal", "session.close", "hashlib.sha256", "jwt.encode", "jwt.decode", "db.query", "models.User"], "published": ["get_db", "hash_password", "verify_password", "create_access_token", "get_current_user"], "classes": [], "methods": [{"name": "get_db()", "description": "Provides a FastAPI dependency that yields a database session and ensures it is closed after use.", "scope": "", "scopeKind": ""}, {"name": "str hash_password(password: str)", "description": "Hashes a password using SHA256; note that this is insecure for production use.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Compares a plaintext password with a hashed password to verify correctness.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta=None)", "description": "Creates a JWT access token from provided data, with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "models.User get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))", "description": "Retrieves the current authenticated user based on the JWT token; raises HTTP 401 on failure.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode", "database.SessionLocal", "hashlib.sha256", "db.query", "models.User"], "search-terms": ["FastAPI dependencies", "JWT token creation", "database session management", "user authentication", "OAuth2PasswordBearer", "JWTError", "get_current_user"], "state": 2, "file_id": 9, "knowledge_revision": 21, "git_revision": "", "ctags": [{"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^SECRET_KEY = os.getenv('JWT_SECRET_KEY', 'temporary_secret')  # Use better\\/secure key in produc/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^def create_access_token(data: dict, expires_delta=None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta=None)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^def get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme)) -> mode/", "language": "Python", "typeref": "typename:models.User", "kind": "function", "signature": "(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "hash_password", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^def hash_password(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/deps.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "fb32f04bb685a53236d763281ab51933", "format-version": 4, "code-base-name": "party_backend", "filename": "party_backend/src/api/deps.py", "fields": [{"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.getenv('JWT_SECRET_KEY', 'temporary_secret')  # Use better\\/secure key in produc/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"21": ""}]}