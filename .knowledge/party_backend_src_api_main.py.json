{"is_source_file": true, "format": "Python", "description": "This file is a FastAPI application defining REST endpoints for a party planning backend API. It includes routes for health checks, user authentication (signup/login), event management (create, list, get, update, delete), guest management (add/list guests), inviting guests in batch, and RSVP handling (responding, retrieving status). It utilizes SQLAlchemy ORM models, schemas for request/response validation, and dependency injection for database sessions and user authentication.", "external_files": ["models", "schemas", "deps"], "external_methods": ["get_db", "hash_password", "verify_password", "create_access_token", "get_current_user"], "published": ["app"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint returning a simple message indicating the API is healthy.", "scope": "", "scopeKind": ""}, {"name": "signup(user_data: schemas.UserCreate, db: Session = Depends(get_db))", "description": "Registers a new user with username, email, and password, storing the hashed password.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticates user credentials and returns a JWT access token.", "scope": "", "scopeKind": ""}, {"name": "create_event( event_data: schemas.EventCreate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user))", "description": "Creates a new event associated with the current authenticated user.", "scope": "", "scopeKind": ""}, {"name": "list_events( db: Session = Depends(get_db), skip: int = 0, limit: int = 50, user: models.User = Depends(get_current_user), )", "description": "Lists all events owned by the current authenticated user.", "scope": "", "scopeKind": ""}, {"name": "get_event( event_id: int = Path(..., description=\"ID of the event\"), db: Session = Depends(get_db), user: models.User = Depends(get_current_user), )", "description": "Retrieves details of a specific event by ID, ensuring ownership.", "scope": "", "scopeKind": ""}, {"name": "update_event( event_id: int, event_update: schemas.EventUpdate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )", "description": "Updates properties of an existing event, restricted to the owner.", "scope": "", "scopeKind": ""}, {"name": "delete_event( event_id: int, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )", "description": "Deletes a specified event if owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "add_guest( event_id: int, guest: schemas.GuestCreate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )", "description": "Adds a guest to a specific event, only if the current user is the owner.", "scope": "", "scopeKind": ""}, {"name": "list_guests( event_id: int, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )", "description": "Lists all guests for an event, if owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "invite_guests( event_id: int, invite_request: schemas.InviteRequest, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )", "description": "Batch-invites guests to an event via email, creating guest entries.", "scope": "", "scopeKind": ""}, {"name": "rsvp_to_event( event_id: int, rsvp: schemas.RSVPCreate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )", "description": "Allows a guest or owner to RSVP to an event, creating or updating RSVP status.", "scope": "", "scopeKind": ""}, {"name": "get_my_rsvp_status( event_id: int, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )", "description": "Retrieves the user's RSVP status for a specific event.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "raise HTTPException", "app.include_router"], "search-terms": ["FastAPI REST endpoints", "Event management", "User authentication", "Guest invitation", "RSVP", "SQLAlchemy ORM", "JWT token", "Auth router", "Event routes", "Guest routes", "Invite batch", "RSVP endpoints"], "state": 2, "file_id": 3, "knowledge_revision": 22, "git_revision": "4678cd29f753d0ee373c36ccce96a942b40fb56a", "revision_history": [{"9": "4678cd29f753d0ee373c36ccce96a942b40fb56a"}, {"22": "4678cd29f753d0ee373c36ccce96a942b40fb56a"}], "ctags": [{"_type": "tag", "name": "add_guest", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def add_guest($/", "language": "Python", "kind": "function", "signature": "( event_id: int, guest: schemas.GuestCreate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_router", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^auth_router = APIRouter(prefix=\"\\/auth\", tags=[\"auth\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_event", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def create_event($/", "language": "Python", "kind": "function", "signature": "( event_data: schemas.EventCreate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "delete_event", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def delete_event($/", "language": "Python", "kind": "function", "signature": "( event_id: int, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )"}, {"_type": "tag", "name": "event_router", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^event_router = APIRouter(prefix=\"\\/events\", tags=[\"events\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_event", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def get_event($/", "language": "Python", "kind": "function", "signature": "( event_id: int = Path(..., description=\"ID of the event\"), db: Session = Depends(get_db), user: models.User = Depends(get_current_user), )"}, {"_type": "tag", "name": "get_my_rsvp_status", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def get_my_rsvp_status($/", "language": "Python", "kind": "function", "signature": "( event_id: int, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )"}, {"_type": "tag", "name": "guest_router", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^guest_router = APIRouter(prefix=\"\\/events\\/{event_id}\\/guests\", tags=[\"guests\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "invite_guests", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def invite_guests($/", "language": "Python", "kind": "function", "signature": "( event_id: int, invite_request: schemas.InviteRequest, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )"}, {"_type": "tag", "name": "invite_router", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^invite_router = APIRouter(prefix=\"\\/events\\/{event_id}\\/invite\", tags=[\"guests\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "list_events", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def list_events($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), skip: int = 0, limit: int = 50, user: models.User = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_guests", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def list_guests($/", "language": "Python", "kind": "function", "signature": "( event_id: int, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "rsvp_router", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^rsvp_router = APIRouter(prefix=\"\\/events\\/{event_id}\\/rsvp\", tags=[\"rsvps\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "rsvp_to_event", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def rsvp_to_event($/", "language": "Python", "kind": "function", "signature": "( event_id: int, rsvp: schemas.RSVPCreate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def signup(user_data: schemas.UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_data: schemas.UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "update_event", "path": "/home/kavia/workspace/code-generation/eventplanner-pro-147388-147397/party_backend/src/api/main.py", "pattern": "/^def update_event($/", "language": "Python", "kind": "function", "signature": "( event_id: int, event_update: schemas.EventUpdate, db: Session = Depends(get_db), user: models.User = Depends(get_current_user) )"}], "hash": "d5db86e7e6134e65b2b065ae6347a223", "format-version": 4, "code-base-name": "party_backend", "filename": "party_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "auth_router = APIRouter(prefix=\"\\/auth\", tags=[\"auth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "event_router = APIRouter(prefix=\"\\/events\", tags=[\"events\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "guest_router = APIRouter(prefix=\"\\/events\\/{event_id}\\/guests\", tags=[\"guests\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "invite_router = APIRouter(prefix=\"\\/events\\/{event_id}\\/invite\", tags=[\"guests\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "rsvp_router = APIRouter(prefix=\"\\/events\\/{event_id}\\/rsvp\", tags=[\"rsvps\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}